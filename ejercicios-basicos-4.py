# âœ… Ejercicio 1:
# Crea una lista con 5 frutas y muestra cada una en mayÃºsculas usando un bucle.

frutas = ["manzana", "pera", "platano", "uva", "kiwi"]

for fruta in frutas:
    print(fruta.upper())

# ðŸ“Œ Tip: Si quisieras guardarlas en mayÃºsculas en otra lista, podrÃ­as usar listas por comprensiÃ³n:

frutas_mayus = [fruta.upper() for fruta in frutas]
print(frutas_mayus)


# âœ… Ejercicio 2:
# Crea una tupla con 3 nÃºmeros y calcula su suma y promedio.

numeros = (4, 7, 3)
suma = sum(numeros)

print(
    f"""Esta es la suma de la tupla: {suma} \nEste es el promedio de la tupla: {suma / len(numeros):.2f}""")


# âœ… Ejercicio 3:
# Crea un diccionario con la informaciÃ³n de una persona: nombre, edad y ciudad.
# Luego imprime: "Isaac tiene 24 aÃ±os y vive en MÃ©xico".

persona = {
    "nombre": "Isaac",
    "edad": 24,
    "ciudad": "MÃ©xico"
}

print(
    f"{persona['nombre']} tiene {persona['edad']} aÃ±os y vive en {persona['ciudad']} ")


# ðŸ“ŒUtilizando una funcion para despues agregar mÃ¡s personas

# Diccionario inicial
persona = {
    "nombre": "Isaac",
    "edad": 24,
    "ciudad": "MÃ©xico",
    "profesion": "Estudiante"
}


# FunciÃ³n que recibe un diccionario y devuelve un mensaje


def presentar_persona(p):
    # Usamos .get() para evitar errores si falta alguna clave
    nombre = p.get("nombre", "Desconocido")
    edad = p.get("edad", "Desconocida")
    ciudad = p.get("ciudad", "Desconocida")
    profesion = p.get("profesion", "")

    return f"{nombre} tiene {edad} aÃ±os, vive en {ciudad} y trabaja/estudia como {profesion}."


# Llamamos a la funciÃ³n
mensaje = presentar_persona(persona)
print(mensaje)

persona2 = {
    "nombre": "",
    "edad": 0,
    "ciudad": "",
    "profesion": ""
}

persona2["nombre"] = input("ingresa el nombre de la persona: ").capitalize()
persona2["edad"] = int(input("ingresa la edad de la persona: "))
persona2["ciudad"] = input("ingresa la ciudad de la persona: ").capitalize()
persona2["profesion"] = input(
    "ingresa la profesion de la persona: ").capitalize()

mensaje = presentar_persona(persona2)
print(mensaje)


# âœ… Ejercicio 4:
# Pide 5 nÃºmeros al usuario y guÃ¡rdalos en un set.
# Imprime el set y asegÃºrate que no haya nÃºmeros repetidos.
numeros = set()  # Creamos un conjunto vacÃ­o

for i in range(5):  # Pedimos 5 nÃºmeros
    nuevo_numero = int(input(f"Ingresa el nÃºmero {i+1} (0 al 10): "))
    numeros.add(nuevo_numero)  # Se aÃ±aden al conjunto

print(f"Los nÃºmeros sin repetir son: {numeros}")


# ðŸ“Œ con un set comprhension

numero = {int(input(f"ingresa el nÃºmero {i+1} (0 al 10): ")) for i in range(5)}
print(f"Estos son los nÃºmeros sin repetir: {numero}")


# âœ… Ejercicio 5 (extra creativo):
# Crea una lista de palabras, elimina las repetidas usando un set y vuelve a convertirlo en lista.
# Luego imprime la lista ordenada alfabÃ©ticamente.

palabras = ["uno", "dos", "tres", "cuatro", "dos", "uno", "dos"]
palabras_sin_repetir = set(palabras)
print(palabras)

print(palabras_sin_repetir)

palabras = sorted(palabras_sin_repetir)
print(palabras)

# ðŸ“Œ con comprhension

words = sorted(set(["uno", "dos", "tres", "cuatro", "dos", "uno", "dos"]))
print(f"estas son las palabras ordenadas sin repatir: {words}")


# ðŸš€ Ejercicios extra para subir dificultad:

# âœ…Listas por comprensiÃ³n con frutas: Crea una lista con las frutas que tengan mÃ¡s de 4 letras.

frutas = ["manzana", "plÃ¡tano", "pera", "manzana",
          "uva", "fresa", "plÃ¡tano", "kiwi", "uva"]

nueva_lista = [x for x in frutas if len(x) > 4]
print(f"Esta la lista de frutas mayor a cuatro letras: {nueva_lista}")

# âœ…Dada una tupla de nÃºmeros, encuentra el mayor y el menor usando max() y min().

numeros = (1, 2, 7, 3, 7, 8, 44, 36, 75, 3, 6, 2, 87, 1)
maximo = max(numeros)
minimo = min(numeros)
print(f"el maximo es: {maximo} y el minimo es: {minimo}")
