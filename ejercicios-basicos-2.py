# ‚úÖejercicio 1
# pide dos n√∫meros al usuario y muestra las operaciones

numero1 = input("Ingresa el primer n√∫mero: ")
numero2 = input("Ingresa el segundo n√∫mero: ")

while True:
    if numero1 != int or float:
        print("Ingresa un n√∫mero valido ")

    if numero2 != int or float:
        print("Ingresa un n√∫mero valido ")

    break

print(f"La suma es: {numero1} + {numero2}")
print(f"La resta es: {numero1} - {numero2}")
print(f"El producto es: {numero1} * {numero2}")
print(f"El cociente es: {numero1} / {numero2}")
print(f"El resto de la division es: {numero1} % {numero2}")


# ‚úÖEjercicio 1 corregido

# Pedimos los n√∫meros y los convertimos a float para permitir decimales
numero1 = float(input("Ingresa el primer n√∫mero: "))
numero2 = float(input("Ingresa el segundo n√∫mero: "))

# Mostramos los resultados
print(f"La suma es: {numero1 + numero2}")
print(f"La resta es: {numero1 - numero2}")
print(f"El producto es: {numero1 * numero2}")
print(f"El cociente es: {numero1 / numero2}")
print(f"El resto de la divisi√≥n es: {numero1 % numero2}")


# -----------------------------------------------------------------------------------------
# ‚úÖEjercicio 2:
# Pide al usuario su edad y muestra:
# Si es mayor o menor de edad
# Si tiene exactamente 18 a√±os, mu√©strale "Acabas de alcanzar la mayor√≠a de edad"

edad = int(input("Porfavor ingresa tu edad: "))

if edad == 18:
    print("Acabas de alcanzar la mayor√≠a de edad.")

elif edad > 18:
    print("Eres mayor de edad.")

elif edad < 18:
    print("Eres menor de edad.")


# -------------------------------------------------------------------------------------
# ‚úÖmini-reto.

# Haz un programa que pida tres n√∫meros y muestre:
# La suma de los tres.
# El n√∫mero mayor.
# El n√∫mero menor.
# Usa solo comparaciones (if/else), sin max() ni min() todav√≠a.

numero1 = int(input("Ingresa el primer n√∫mero"))
numero2 = int(input("Ingresa el segundo n√∫mero"))
numero3 = int(input("Ingresa el tercer n√∫mero"))

print(f"La suma de los tres n√∫meros es: {numero1 + numero2 + numero3}")

if numero1 > numero2 and numero3:
    print(f"El n√∫mero mayor es: {numero1}")
elif numero2 > numero1 and numero3:
    print(f"El n√∫mero mayor es: {numero2}")
elif numero3 > numero2 and numero1:
    print(f"El n√∫mero mayor es: {numero3}")

else:
    print("No hay un n√∫mero mayor")

if numero1 < numero2 and numero3:
    print(f"El n√∫mero menor es: {numero1}")
elif numero2 < numero1 and numero3:
    print(f"El n√∫mero menor es: {numero2}")
elif numero3 < numero2 and numero1:
    print(f"El n√∫mero menor es: {numero3}")

else:
    print("No hay un n√∫mero menor")


# Correcci√≥n para mayor claridad
# La condici√≥n correcta es comparar cada n√∫mero con los otros dos:

numero1 = int(input("Ingresa el primer n√∫mero: "))
numero2 = int(input("Ingresa el segundo n√∫mero: "))
numero3 = int(input("Ingresa el tercer n√∫mero: "))

print(f"La suma de los tres n√∫meros es: {numero1 + numero2 + numero3}")

# Determinar el mayor
if numero1 > numero2 and numero1 > numero3:
    print(f"El n√∫mero mayor es: {numero1}")
elif numero2 > numero1 and numero2 > numero3:
    print(f"El n√∫mero mayor es: {numero2}")
elif numero3 > numero1 and numero3 > numero2:
    print(f"El n√∫mero mayor es: {numero3}")
else:
    print("No hay un n√∫mero mayor (puede que sean iguales)")

# Determinar el menor
if numero1 < numero2 and numero1 < numero3:
    print(f"El n√∫mero menor es: {numero1}")
elif numero2 < numero1 and numero2 < numero3:
    print(f"El n√∫mero menor es: {numero2}")
elif numero3 < numero1 and numero3 < numero2:
    print(f"El n√∫mero menor es: {numero3}")
else:
    print("No hay un n√∫mero menor (puede que sean iguales)")
# üí° Explicaci√≥n de la correcci√≥n
# numero1 > numero2 and numero1 > numero3 ‚Üí asegura que numero1 sea mayor que los dos.

# Igual para numero2 y numero3.

# Si no se cumple ninguno, entramos al else, lo que significa que al menos dos son iguales.


# -------------------------------------------------------------------------------------------------
# ‚úÖEjercicio 3:
# Pide al usuario un n√∫mero y verifica:
# Si es par o impar
# Si es m√∫ltiplo de 5

    # numero_del_usuario = int(input("Ingresa tu n√∫mero: "))

    # for verificar in numero_del_usuario:
    #     verificar /= 2
    # if  verificar == 0:
    #     print("Tu n√∫mero es par.")
    # else:
    #     print("Tu n√∫mero es impar.")

# Problemas en el c√≥digo:
# for verificar in numero_del_usuario:
# numero_del_usuario es un n√∫mero entero, y no se puede recorrer con un for (eso se hace con listas, strings, etc.).
# Aqu√≠ no necesitas un for, solo una divisi√≥n con el operador m√≥dulo %.
# verificar /= 2 ‚ùå
# Eso divide entre 2, pero no sirve para saber si es par o impar.
# Lo que se usa es el m√≥dulo (%), que devuelve el residuo de una divisi√≥n.

# C√≥digo corregido ‚úÖ

numero_del_usuario = int(input("Ingresa tu n√∫mero: "))

# Verificar si es par o impar
if numero_del_usuario % 2 == 0:
    print("Tu n√∫mero es par.")
else:
    print("Tu n√∫mero es impar.")

# Verificar si es m√∫ltiplo de 5
if numero_del_usuario % 5 == 0:
    print("Tu n√∫mero es m√∫ltiplo de 5.")
else:
    print("Tu n√∫mero NO es m√∫ltiplo de 5.")

# Explicaci√≥n paso a paso:

# numero_del_usuario % 2 == 0 ‚Üí si al dividir entre 2 el residuo es 0, el n√∫mero es par.
# numero_del_usuario % 5 == 0 ‚Üí si al dividir entre 5 el residuo es 0, el n√∫mero es m√∫ltiplo de 5.


# -----------------------------------------------------------------------------
# ‚úÖ Ejercicio 4:
# Un restaurante da 10% de descuento si la cuenta es mayor a $100.
# Pide el total al usuario y muestra cu√°nto debe pagar con el descuento (si aplica).
cuenta = float(input(
    "Hay un 10% de descuento si tu cuenta es mayor a $100. \n Total de la cuenta: "))

if cuenta > 100:
    descuento = cuenta * .10
    # Para mostrar solo dos d√≠gitos despu√©s del punto decimal en Python, puedes usar la funci√≥n round() o el formato de cadena con el especificador .2f. La funci√≥n round() redondea el n√∫mero al n√∫mero especificado de decimales, mientras que el formato de cadena permite controlar la presentaci√≥n visual sin modificar el valor subyacente.
    print(f"Total con descuento es : ${cuenta - descuento:.2f}")

else:
    print(f"El descuento no es aplicable. \n Total: ${cuenta}")
# Una forma m√°s moderna de formatear cadenas en Python es usando f-strings.

# numero = 3.14159
# cadena_formateada = f"{numero:.2f}"
# print(cadena_formateada)  # Salida: 3.14


# Solo un par de detalles que te pueden interesar para mejorarlo a√∫n m√°s:

# Redondeo tambi√©n cuando no aplica el descuento
# En tu else, est√°s mostrando el total sin formatear (${cuenta}), lo que puede mostrar muchos decimales (por ejemplo 100.3333333). Ser√≠a mejor mostrarlo tambi√©n con :.2f.

# Evitar repetir l√≥gica
# En lugar de imprimir en cada rama (if y else), puedes calcular el monto final en una variable y luego imprimirlo una sola vez. Eso lo hace m√°s limpio.

# üëâ Aqu√≠ una versi√≥n optimizada:

cuenta = float(input(
    "Hay un 10% de descuento si tu cuenta es mayor a $100. \nTotal de la cuenta: "))

if cuenta > 100:
    cuenta -= cuenta * 0.10  # Aplica el descuento

print(f"Total a pagar: ${cuenta:.2f}")
# Con esto:

# Si la cuenta es 120, paga 108.00.

# Si la cuenta es 80, paga 80.00.


# -------------------------------------------------------------------------------------------------------------
# ‚úÖEjercicio 5 (extra creativo):
# Pide al usuario 3 n√∫meros y mu√©stralos ordenados de mayor a menor
# (puedes usar operadores l√≥gicos y comparaciones, sin funciones de listas todav√≠a üòâ).

primer_numero = int(input("Selecciona tu primer n√∫mero"))
segundo_numero = int(input("Selecciona tu segundo n√∫mero"))
tercer_numero = int(input("Selecciona tu tercer n√∫mero"))

if primer_numero >= segundo_numero and primer_numero >= tercer_numero:
    if segundo_numero >= tercer_numero:
        print(primer_numero, segundo_numero, tercer_numero)
    elif tercer_numero >= segundo_numero:
        print(primer_numero, tercer_numero, segundo_numero)

if segundo_numero >= primer_numero and segundo_numero >= tercer_numero:
    if primer_numero >= tercer_numero:
        print(segundo_numero, primer_numero, tercer_numero)
    elif tercer_numero >= primer_numero:
        print(segundo_numero, tercer_numero, primer_numero)

if tercer_numero >= segundo_numero and tercer_numero >= primer_numero:
    if segundo_numero >= primer_numero:
        print(tercer_numero, segundo_numero, primer_numero)
    elif primer_numero >= segundo_numero:
        print(tercer_numero, primer_numero, segundo_numero)


# Con listas el ejercicio se vuelve much√≠simo m√°s corto y elegante, porque Python ya tiene m√©todos para ordenar.
# Mira la diferencia:

# ‚úÖEjercicio con listas
numeros = []  # creamos una lista vac√≠a

# Pedimos los 3 n√∫meros y los guardamos en la lista
numeros.append(int(input("Selecciona tu primer n√∫mero: ")))
numeros.append(int(input("Selecciona tu segundo n√∫mero: ")))
numeros.append(int(input("Selecciona tu tercer n√∫mero: ")))

# Ordenamos la lista de mayor a menor
numeros.sort(reverse=True)

# Mostramos el resultado
print("N√∫meros ordenados de mayor a menor:", numeros)

# üîé Explicaci√≥n r√°pida:
# append() ‚Üí mete cada n√∫mero en la lista.
# sort(reverse=True) ‚Üí ordena la lista, y con reverse=True lo hace de mayor a menor.
# Si no pones reverse=True, lo hace de menor a mayor.


# üëâ a√∫n m√°s compacto:

numeros = [
    int(input("Selecciona tu primer n√∫mero: ")),
    int(input("Selecciona tu segundo n√∫mero: ")),
    int(input("Selecciona tu tercer n√∫mero: "))
]

print("De mayor a menor:", sorted(numeros, reverse=True))
