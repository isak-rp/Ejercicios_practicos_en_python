# Ejemplo con break
for numero in range(10):
    if numero == 5:
        break
    print(numero)

# Ejemplo con continue
for numero in range(10):
    if numero % 2 == 0:
        continue
    print(numero)   # Solo imprime impares

# continue salta el resto del cÃ³digo dentro del bucle y va directo a la siguiente vuelta.
# Sin continue, el bucle sigue ejecutando todo el bloque.

# ðŸ’¡ Piensa en continue como un "saltar esta vuelta".
# Y en break como "salir del bucle de inmediato".


# âœ… Ejercicio 1:
# Imprime los nÃºmeros del 1 al 20 con un bucle for.

for numero in range(1, 21):
    print(numero)

# âœ… Ejercicio 2:
# Imprime los nÃºmeros pares del 1 al 50 usando while.
numero = 0

while numero <= 50:
    numero += 1
    if numero % 2 == 0:
        print(numero)

# Funciona, pero vamos a hacerlo mÃ¡s ordenado:

# Inicias en 0, pero incrementas antes de imprimir.

# Esto imprime bien los pares hasta 50, pero incrementas primero, lo que puede confundir al leer.

# Se puede optimizar evitando el if si incrementas de 2 en 2.

# ðŸ”¹ VersiÃ³n mÃ¡s limpia:

numero = 2

while numero <= 50:
    print(numero)
    numero += 2
# MÃ¡s eficiente: ya no revisa todos los nÃºmeros, solo los pares.


# âœ… Ejercicio 3:
# Haz una cuenta regresiva desde 10 hasta 1 y al final imprime "Â¡Despegue!".
despegue = 10
while despegue >= 0:
    print(despegue)
    despegue -= 1
    if despegue == 0:
        print("Â¡Despegue!")
        break

# version sin el break

despegue = 10
while despegue > 0:
    print(despegue)
    despegue -= 1
    if despegue == 0:
        print("Â¡Despegue!")


# version sin usar un if
despegue = 10
while despegue > 0:
    print(despegue)
    despegue -= 1

print("Â¡Despegue!")


# âœ… Ejercicio 4:
# Pide un nÃºmero al usuario y muestra su tabla de multiplicar del 1 al 10.

numero = int(input("Ingresa el nÃºmero a multiplicar"))
tabla = 1
while tabla <= 10:
    print(f"{numero * tabla}")
    tabla += 1


#  VersiÃ³n mejorada:
numero = int(input("Ingresa el nÃºmero a multiplicar: "))
tabla = 1

while tabla <= 10:
    print(f"{numero} x {tabla} = {numero * tabla}")
    tabla += 1
# ðŸ“Œ Ahora el programa imprime la operaciÃ³n completa, asÃ­ serÃ¡ mÃ¡s entendible.

# âœ… Ejercicio 5:
# Pide palabras al usuario hasta que escriba "salir".
# Luego imprime todas las palabras que escribiÃ³.

    # palabras = []

    # while palabras != "salir":
    #     palabras.append(
    #         input.lower("""Escribe cualquier palabra si escribes "salir" se acaba."""))


# âœ… VersiÃ³n corregida:

palabras = []  # Lista vacÃ­a para guardar las palabras

while True:
    palabra = input(
        'Escribe cualquier palabra (escribe "salir" para terminar): ').lower()

    if palabra == "salir":
        break  # Salimos del bucle si el usuario escribe "salir"

    palabras.append(palabra)  # Guardamos la palabra en la lista

# Imprimimos todas las palabras que escribiÃ³ el usuario
print("Palabras ingresadas:", palabras)


# ðŸ’¡ ExplicaciÃ³n:
# while True: â†’ Creamos un bucle infinito controlado por break.

# palabra = input(...).lower() â†’ Guardamos la palabra en minÃºsculas para que "Salir", "SALIR" o "salir" se reconozcan igual.

# if palabra == "salir": break â†’ Salimos del bucle si el usuario escribe "salir".

# palabras.append(palabra) â†’ Guardamos la palabra en la lista.

# Al final, imprimimos la lista completa.


# âœ… Ejercicio 6 (extra creativo):
# Haz un programa que dibuje un triÃ¡ngulo de asteriscos segÃºn un nÃºmero que ingrese el usuario.

# Pedimos al tamaÃ±o del triÃ¡ngulo
filas = int(input("Ingrese el nÃºmero de filas para el triÃ¡ngulo: "))

# Bucle para dibujar cada fila
for i in range(1, filas + 1):
    print("*" * i)
